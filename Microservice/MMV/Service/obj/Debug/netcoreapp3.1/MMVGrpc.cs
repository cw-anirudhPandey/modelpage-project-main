// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MMV.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace MMV.Service.ProtoClass {
  public static partial class MMVService
  {
    static readonly string __ServiceName = "MMV.MMVService";

    static readonly grpc::Marshaller<global::MMV.Service.ProtoClass.GrpcInt> __Marshaller_MMV_GrpcInt = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MMV.Service.ProtoClass.GrpcInt.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MMV.Service.ProtoClass.MakeResponse> __Marshaller_MMV_MakeResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MMV.Service.ProtoClass.MakeResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MMV.Service.ProtoClass.ModelResponse> __Marshaller_MMV_ModelResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MMV.Service.ProtoClass.ModelResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MMV.Service.ProtoClass.VersionListResponse> __Marshaller_MMV_VersionListResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MMV.Service.ProtoClass.VersionListResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MMV.Service.ProtoClass.VersionResponse> __Marshaller_MMV_VersionResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MMV.Service.ProtoClass.VersionResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::MMV.Service.ProtoClass.GrpcInt, global::MMV.Service.ProtoClass.MakeResponse> __Method_GetMake = new grpc::Method<global::MMV.Service.ProtoClass.GrpcInt, global::MMV.Service.ProtoClass.MakeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMake",
        __Marshaller_MMV_GrpcInt,
        __Marshaller_MMV_MakeResponse);

    static readonly grpc::Method<global::MMV.Service.ProtoClass.GrpcInt, global::MMV.Service.ProtoClass.ModelResponse> __Method_GetModel = new grpc::Method<global::MMV.Service.ProtoClass.GrpcInt, global::MMV.Service.ProtoClass.ModelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetModel",
        __Marshaller_MMV_GrpcInt,
        __Marshaller_MMV_ModelResponse);

    static readonly grpc::Method<global::MMV.Service.ProtoClass.GrpcInt, global::MMV.Service.ProtoClass.VersionListResponse> __Method_GetVersionList = new grpc::Method<global::MMV.Service.ProtoClass.GrpcInt, global::MMV.Service.ProtoClass.VersionListResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetVersionList",
        __Marshaller_MMV_GrpcInt,
        __Marshaller_MMV_VersionListResponse);

    static readonly grpc::Method<global::MMV.Service.ProtoClass.GrpcInt, global::MMV.Service.ProtoClass.VersionResponse> __Method_GetDefaultVersionByModelId = new grpc::Method<global::MMV.Service.ProtoClass.GrpcInt, global::MMV.Service.ProtoClass.VersionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultVersionByModelId",
        __Marshaller_MMV_GrpcInt,
        __Marshaller_MMV_VersionResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::MMV.Service.ProtoClass.MMVReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MMVService</summary>
    [grpc::BindServiceMethod(typeof(MMVService), "BindService")]
    public abstract partial class MMVServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::MMV.Service.ProtoClass.MakeResponse> GetMake(global::MMV.Service.ProtoClass.GrpcInt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MMV.Service.ProtoClass.ModelResponse> GetModel(global::MMV.Service.ProtoClass.GrpcInt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MMV.Service.ProtoClass.VersionListResponse> GetVersionList(global::MMV.Service.ProtoClass.GrpcInt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MMV.Service.ProtoClass.VersionResponse> GetDefaultVersionByModelId(global::MMV.Service.ProtoClass.GrpcInt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MMVServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetMake, serviceImpl.GetMake)
          .AddMethod(__Method_GetModel, serviceImpl.GetModel)
          .AddMethod(__Method_GetVersionList, serviceImpl.GetVersionList)
          .AddMethod(__Method_GetDefaultVersionByModelId, serviceImpl.GetDefaultVersionByModelId).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MMVServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetMake, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MMV.Service.ProtoClass.GrpcInt, global::MMV.Service.ProtoClass.MakeResponse>(serviceImpl.GetMake));
      serviceBinder.AddMethod(__Method_GetModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MMV.Service.ProtoClass.GrpcInt, global::MMV.Service.ProtoClass.ModelResponse>(serviceImpl.GetModel));
      serviceBinder.AddMethod(__Method_GetVersionList, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MMV.Service.ProtoClass.GrpcInt, global::MMV.Service.ProtoClass.VersionListResponse>(serviceImpl.GetVersionList));
      serviceBinder.AddMethod(__Method_GetDefaultVersionByModelId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MMV.Service.ProtoClass.GrpcInt, global::MMV.Service.ProtoClass.VersionResponse>(serviceImpl.GetDefaultVersionByModelId));
    }

  }
}
#endregion
