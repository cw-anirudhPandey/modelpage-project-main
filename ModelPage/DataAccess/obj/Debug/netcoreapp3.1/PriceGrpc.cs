// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Price.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Price {
  public static partial class PriceService
  {
    static readonly string __ServiceName = "Price.PriceService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Price.HelloRequest> __Marshaller_Price_HelloRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Price.HelloRequest.Parser));
    static readonly grpc::Marshaller<global::Price.HelloReply> __Marshaller_Price_HelloReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Price.HelloReply.Parser));
    static readonly grpc::Marshaller<global::Price.GrpcInt> __Marshaller_Price_GrpcInt = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Price.GrpcInt.Parser));
    static readonly grpc::Marshaller<global::Price.PriceListResponse> __Marshaller_Price_PriceListResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Price.PriceListResponse.Parser));
    static readonly grpc::Marshaller<global::Price.GrpcTwoInt> __Marshaller_Price_GrpcTwoInt = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Price.GrpcTwoInt.Parser));
    static readonly grpc::Marshaller<global::Price.PriceResponse> __Marshaller_Price_PriceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Price.PriceResponse.Parser));
    static readonly grpc::Marshaller<global::Price.GrpcString> __Marshaller_Price_GrpcString = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Price.GrpcString.Parser));

    static readonly grpc::Method<global::Price.HelloRequest, global::Price.HelloReply> __Method_SayHello = new grpc::Method<global::Price.HelloRequest, global::Price.HelloReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SayHello",
        __Marshaller_Price_HelloRequest,
        __Marshaller_Price_HelloReply);

    static readonly grpc::Method<global::Price.GrpcInt, global::Price.PriceListResponse> __Method_GetPriceListByCityId = new grpc::Method<global::Price.GrpcInt, global::Price.PriceListResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPriceListByCityId",
        __Marshaller_Price_GrpcInt,
        __Marshaller_Price_PriceListResponse);

    static readonly grpc::Method<global::Price.GrpcTwoInt, global::Price.PriceResponse> __Method_GetPriceByCityVersion = new grpc::Method<global::Price.GrpcTwoInt, global::Price.PriceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPriceByCityVersion",
        __Marshaller_Price_GrpcTwoInt,
        __Marshaller_Price_PriceResponse);

    static readonly grpc::Method<global::Price.GrpcInt, global::Price.GrpcString> __Method_GetAvgPriceByVersionId = new grpc::Method<global::Price.GrpcInt, global::Price.GrpcString>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAvgPriceByVersionId",
        __Marshaller_Price_GrpcInt,
        __Marshaller_Price_GrpcString);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Price.PriceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for PriceService</summary>
    public partial class PriceServiceClient : grpc::ClientBase<PriceServiceClient>
    {
      /// <summary>Creates a new client for PriceService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public PriceServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PriceService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public PriceServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected PriceServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected PriceServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Price.HelloReply SayHello(global::Price.HelloRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SayHello(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Price.HelloReply SayHello(global::Price.HelloRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SayHello, null, options, request);
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Price.HelloReply> SayHelloAsync(global::Price.HelloRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SayHelloAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Price.HelloReply> SayHelloAsync(global::Price.HelloRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SayHello, null, options, request);
      }
      public virtual global::Price.PriceListResponse GetPriceListByCityId(global::Price.GrpcInt request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPriceListByCityId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Price.PriceListResponse GetPriceListByCityId(global::Price.GrpcInt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPriceListByCityId, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Price.PriceListResponse> GetPriceListByCityIdAsync(global::Price.GrpcInt request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPriceListByCityIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Price.PriceListResponse> GetPriceListByCityIdAsync(global::Price.GrpcInt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPriceListByCityId, null, options, request);
      }
      public virtual global::Price.PriceResponse GetPriceByCityVersion(global::Price.GrpcTwoInt request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPriceByCityVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Price.PriceResponse GetPriceByCityVersion(global::Price.GrpcTwoInt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPriceByCityVersion, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Price.PriceResponse> GetPriceByCityVersionAsync(global::Price.GrpcTwoInt request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPriceByCityVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Price.PriceResponse> GetPriceByCityVersionAsync(global::Price.GrpcTwoInt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPriceByCityVersion, null, options, request);
      }
      public virtual global::Price.GrpcString GetAvgPriceByVersionId(global::Price.GrpcInt request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAvgPriceByVersionId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Price.GrpcString GetAvgPriceByVersionId(global::Price.GrpcInt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAvgPriceByVersionId, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Price.GrpcString> GetAvgPriceByVersionIdAsync(global::Price.GrpcInt request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAvgPriceByVersionIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Price.GrpcString> GetAvgPriceByVersionIdAsync(global::Price.GrpcInt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAvgPriceByVersionId, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override PriceServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PriceServiceClient(configuration);
      }
    }

  }
}
#endregion
